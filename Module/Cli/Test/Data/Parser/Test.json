{
"title": "Test.Parser.Control.Test",
"test" : {
    "control_test_35" : "{literal}{input(prompt: )}{/literal}",
    "start" : "{time(true)}",
    "version" : "{$version}",
    "patch" : "{$patch}",
    "boolean" : true,
    "value" : "",
    "int" : 1,
    "float": 1.3333333333333333333,
    "variable" : "true",
    "array" : [
        "first",
        "middle",
        "last"
    ],
    "object" : {
        "test" : true,
        "water" : {
            "ocean" : true,
            "bottle" : false
        },
        "beer" : true
    },
    "file": "{$dir.module.data}Parser{$dir.ds}Control.Test.json",
    "link": "{$dir.module.data}Parser{$dir.ds}Function",
    "control_test_1" : "{empty()}",
    "control_test_2" : "{isset()}",
    "control_test_3" : "{file.exists({$dir.vendor})}",
    "control_test_4" : "{literal}{permission('','Administrator')}{/literal}",
    "control_test_5" : "{math.round(2.54)}",
    "control_test_6" : "{route('priya-pull')}",
    "control_test_7" : "{explode(' ', 'this is awesome')}",
    "control_test_8" : "{implode(' ', array('this', 'is', 'awesome'))}",
    "control_test_9" : "{implode(' ', {$test.control_test_7})}",
    "control_test_10" : "{is.array({$test.control_test_7})}",
    "control_test_0" : "{is.object({$test.object})}",
    "control_test_11" : "{is.string({$test.variable})}",
    "control_test_12" : "{is.int({$test.int})}",
    "control_test_13" : "{is.float({$test.float})}",
    "control_test_14" : "{is.numeric({$test.float})}",
    "control_test_15" : "{is.file({$test.file})}",
    "control_test_16" : "{is.dir({$dir.vendor})}",
    "control_test_17" : "{is.link({$test.link})}",
    "control_test_18" : "{is.readable({$test.link})}",
    "control_test_19" : "{is.writeable({$test.link})}",
    "control_test_20" : "{is.executable({$test.link})}",
    "control_test_21" : "{is.upload({$test.link})}",
    "control_test_22" : "{time()}",
    "control_test_23" : "{time(true)}",
    "control_test_24" : "{time(1)}",
    "control_test_25" : "{date(true)}",
    "control_test_26" : "{date(DATE_COOKIE)}",
    "control_test_27" : "{request(request)}",
    "control_test_28" : "{parameter(3)}",
    "control_test_29" : "{session(control.test, {$test.control_test_28})}",
    "control_test_30" : "{session(control.test)}",
    "control_test_31" : "{session(id)}",
    "control_test_32" : "{cookie(PHPSESSID, {$test.control_test_31})}",
    "control_test_33" : "{cookie(DATE, {$test.control_test_25})}",
    "control_test_34" : "{cookie()}",
    "control_test_36" : "{literal}{$test.control_test_35}{/literal}",
    "control_test_37" : "{output(,hide)}",
    "control_test_38" : "{route(indent)}",
    "control_test_39" : "{priya({$test.control_test_38}, 'text/css')}",
    "control_test_40" : "{error('delete', 'smarty-not-found')}",
    "control_test_41" : "{literal}{output({$test.control_test_35}PHP_EOL)}{/literal}",
    "control_test_42" : "{output({$test.control_test_7})}",
    "control_test_43" : "{output(PHP_EOL)}",
    "control_test_44" : "{output(,show)}",
    "control_test_45" : "{output({$test.object|json}, 'unhide')}",
    "control_test_46" : "{output(PHP_EOL)}",
    "control_test_47" : "{error('add', 'fatal', 'error')}",
    "control_test_48" : "{error('delete', 'fatal')}",
    "control_test_49" : "{error()}",
    "control_test_50" : "{str.uc('capitalize')}",
    "control_test_51" : "{str.uc.first('capitalize')}",
    "control_test_52" : "{str.uc.word('capitalize some-words', '-')}",
    "control_test_53" : "{str.lc('LOWERCASE')}",
    "control_test_54" : "{str.lc.first('LOWERCASE')}",
    "control_test_55" : "{str.lc.word('LOWERCASE SOME-WORDS',' ')}",
    "control_test_56" : "{str.format(%'.9d, 123)}",
    "control_test_57" : "{str.scan(January 01 2000 00:01, %s %d %d %d:%d, month, day, year, hour, minute)}",
    "control_test_58" : "{str.scan(January 01 2000 00:01, %s %d %d %d:%d)}",
    "control_test_59" : "{str.translate('abicdefghi','ghi', 'aao')}",
    "control_test_60" : "{str.translate('month year day',{$test.control_test_57})}",
    "control_test_61" : "{str.reverse('dlrow olleh')}",
    "control_test_62" : "{str.replace('hello', 'welcome to the', 'hello world', $test.control_test_63)}",
    "control_test_64" : "{str.replace.ic('hello', 'Welcome to the', 'HELLO world', $test.control_test_65)}",
    "control_test_66" : "{$test.control_test_63}",
    "control_test_67" : "{$test.control_test_65}",
    "control_test_68" : "{str.repeat(ab, 12)}",
    "control_test_69" : "{str.random(12)}",
    "control_test_70" : "{str.split(pairs of two,2)}",
    "control_test_71" : "{str.token(/this/is/it,/)}",
    "control_test_72" : "{str.token(/)}",
    "control_test_73" : "{str.occurence(this is the string, string, true)}",
    "control_test_74" : "{str.occurence(this is the string, not found)}",
    "control_test_75" : "{str.occurence.ic(this is the String, string, true)}",
    "control_test_76" : "{str.occurence.ic(this IS the string, not found)}",
    "control_test_77" : "{str.pad(this IS the string, 28,' fill with this one')}",
    "control_test_78" : "{str.md5(md is weseome)}",
    "control_test_79" : "{str.crc32(validate check)}",
    "control_test_80" : "{str.rot13(validate check)}",
    "control_test_81" : "{str.crypt('validate check, '123')}",
    "control_test_82" : "{str.chr(33)}{str.ord('A')}",
    "control_test_83" : "{str.ord('A')}",
    "control_test_84" : "{str.nl2br('abc\n')}",
    "control_math_test_1" : "{math.hex2bin('FF')}",
    "control_math_test_2" : "{math.bin2hex('1000')}",
    "control_math_test_3" : "{math.dec2bin('1.127')}",
    "control_math_test_4" : "{math.bin2dec('1110')}",
    "control_math_test_5" : "{math.hex2dec('FF')}",
    "control_math_test_6" : "{math.dec2hex('255')}",
    "control_math_test_7" : "{math.convert('255', 10, 12)}",
    "control_test_85" : "{str.base64.encode('Hello World!')}",
    "control_test_86" : "{str.base64.decode({$test.control_test_85})}",
    "control_test_87" : "{str.get.csv(\"'id','test',123\")}",
    "control_test_88" : "{str.compare(this, THIS)}",
    "control_test_89" : "{str.compare.ic(this, THIS)}",
    "control_test_90" : "{str.quote.meta(\"+*?\")}",
    "control_test_91" : "{str.quote.printable.encode(hello = world !)}",
    "control_test_92" : "{str.quote.printable.decode({$test.control_test_91})}",
    "control_math_test_8" : "{math.cos(1.73)}",
    "control_math_test_9" : "{math.cos.arc(0.15)}",
    "control_math_test_10" : "{math.cos.inv(1.73)}",
    "control_math_test_11" : "{math.cos.arc.inv(0.15)}",
    "control_math_test_12" : "{math.sin(1.73)}",
    "control_math_test_13" : "{math.sin.arc(0.15)}",
    "control_math_test_14" : "{math.sin.inv(1.73)}",
    "control_math_test_15" : "{math.sin.arc.inv(0.15)}",
    "control_math_test_16" : "{math.tan(1.73)}",
    "control_math_test_17" : "{math.tan.arc(0.15)}",
    "control_math_test_18" : "{math.tan.inv(1.73)}",
    "control_math_test_19" : "{math.tan.arc.inv(0.15)}",
    "control_math_test_20" : "{math.abs(-4)}",
    "control_math_test_21" : "{math.random()}",
    "control_math_test_22" : "{math.random(1, 6)}",
    "control_math_test_23" : "{math.random.byte(8)}",
    "control_math_test_24" : "{math.max(array(1,2,3,2,1))}",
    "control_math_test_25" : "{math.min(array(1,2,3,2,1))}",
    "control_math_test_26" : "{math.average(array(1,2,3,2,1), 2)}",
    "control_is_test_1" : "{is.finite(2000)}",
    "control_is_test_2" : "{is.infinite(2000)}",
    "control_is_test_4" : "{is.nan(NAN)}",
    "control_is_test_3" : "{is.nan(2000)}",
    "control_mem_test_1" : "Memory: {memory.usage(MB)}",
    "control_mem_test_2" : "Memory: {memory.usage('MB')}",
    "control_mem_test_3" : "Memory: {memory.usage(\"MB\")}",
    "end": "{time(true)}",
    "end2" : "{$test.end}"
},
"note" : {
    "notes" : "U can note down false test results",
    "control_math_test_23" : "Works with PHP version 7.0.0 or greater",
    "control_test_4" : "use parameter user & password to validate",
    "control_test_22" : "Time will tell...",
    "control_test_997" : "Memory can only be compared to itself",
    "end" : "{$time.start}",
    "end2" : "{time(true)}"
},
"output" : {
    "version" : "{$version}",
    "patch" : "{$patch}",
    "value" : "",
    "int" : 1,
    "float": 1.3333333333333,
    "boolean" : true,
    "variable" : "Priya",
    "array" : [
        "first",
        "middle",
        "last"
    ],
    "object" : {
        "test" : true,
        "water" : {
            "ocean" : true,
            "bottle" : false
        },
        "beer" : true
    },
    "file": "{$test.file}",
    "link": "{$test.link}",
    "control_test_1" : true,
    "control_test_2" : false,
    "control_test_3" : true,
    "control_test_4" : false,
    "control_test_5" : 3,
    "control_test_6" : "Application\/Pull",
    "control_test_7" : [
        "this",
        "is",
        "awesome"
    ],
    "control_test_8" : "this is awesome",
    "control_test_9" : "this is awesome",
    "control_test_10" : true,
    "control_test_11" : true,
    "control_test_12" : true,
    "control_test_13" : true,
    "control_test_14" : true,
    "control_test_15" : true,
    "control_test_16" : true,
    "control_test_17" : true,
    "control_test_18" : true,
    "control_test_19" : true,
    "control_test_20" : true,
    "control_test_21" : false,
    "control_test_22" : "{$test.control_test_22}",
    "control_test_23" : "{$test.control_test_23}",
    "control_test_24" : "{$test.control_test_24}",
    "control_test_25" : "{$test.control_test_25}",
    "control_test_26" : "{$test.control_test_26}",
    "control_test_27" : "{$test.control_test_27}",
    "control_test_28" : "{$test.control_test_28}",
    "control_test_29" : "{$test.control_test_28}",
    "control_test_30" : "{$test.control_test_28}",
    "control_test_31" : "{$test.control_test_31}",
    "control_test_32" : "{$test.control_test_31}",
    "control_test_33" : "{$test.control_test_25}",
    "control_test_34" : "{$test.control_test_34}",
    "control_test_35" : "{literal}{$test.control_test_35}{/literal}",
    "control_test_36" : "{literal}{$test.control_test_36}{/literal}",
    "control_test_37" : "{$test.control_test_37}",
    "control_test_38" : "{$test.control_test_38}",
    "control_test_39" : "{$test.control_test_39}",
    "control_test_40" : "{$test.control_test_40}",
    "control_test_41" : "{literal}{$test.control_test_41}{/literal}",
    "control_test_42" : "{$test.control_test_42}",
    "control_test_43" : "{$test.control_test_43}",
    "control_test_44" : "{$test.control_test_44}",
    "control_test_45" : "{$test.control_test_45}",
    "control_test_46" : "{$test.control_test_46}",
    "control_test_47" : "{$test.control_test_47}",
    "control_test_48" : "{$test.control_test_48}",
    "control_test_49" : "{$test.control_test_49}",
    "control_test_50" : "{$test.control_test_50}",
    "control_test_51" : "{$test.control_test_51}",
    "control_test_52" : "{$test.control_test_52}",
    "control_test_53" : "{$test.control_test_53}",
    "control_test_54" : "{$test.control_test_54}",
    "control_test_55" : "{$test.control_test_55}",
    "control_test_56" : "{$test.control_test_56}",
    "control_test_57" : "{$test.control_test_57}",
    "control_test_58" : "{$test.control_test_58}",
    "control_test_59" : "{$test.control_test_59}",
    "control_test_60" : "{$test.control_test_60}",
    "control_test_61" : "hello world",
    "control_test_62" : "{$test.control_test_62}",
    "control_test_63" : "{$test.control_test_63}",
    "control_test_64" : "{$test.control_test_64}",
    "control_test_65" : "{$test.control_test_65}",
    "control_test_66" : "{$test.control_test_66}",
    "control_test_67" : "{$test.control_test_67}",
    "control_test_68" : "{$test.control_test_68}",
    "control_test_69" : "{$test.control_test_69}",
    "control_test_70" : "{$test.control_test_70}",
    "control_test_71" : "{$test.control_test_71}",
    "control_test_72" : "{$test.control_test_72}",
    "control_test_73" : "{$test.control_test_73}",
    "control_test_74" : "{$test.control_test_74}",
    "control_test_75" : "{$test.control_test_75}",
    "control_test_76" : "{$test.control_test_76}",
    "control_test_77" : "{$test.control_test_77}",
    "control_test_78" : "{$test.control_test_78}",
    "control_test_79" : "{$test.control_test_79}",
    "control_test_80" : "{$test.control_test_80}",
    "control_test_81" : "{$test.control_test_81}",
    "control_test_82" : "{$test.control_test_82}",
    "control_test_83" : "{$test.control_test_83}",
    "control_mem_test_1" : "{$test.control_mem_test_1}",
    "control_mem_test_2" : "{$test.control_mem_test_2}",
    "control_mem_test_3" : "{$test.control_mem_test_3}",
    "start" : "{$test.start}",
    "end2" : "{$test.start}",
    "end" : "{time(true)}"
}
}